name: Release

on:
  # Publish on GitHub Release publication and on pushed version tags.
  release:
    types: [published, created]
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag/ref
        uses: actions/checkout@v4
        with:
          # Use the release tag when triggered by a release, otherwise use the pushed ref
          ref: ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          registry-url: 'https://registry.npmjs.org'
          always-auth: true
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Verify build and tests
        run: |
          npm run typecheck
          npm run lint
          npm run build
          npm run pack:check
          npm test -- --run
      - name: Ensure server manifest versions match package
        run: |
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          MANIFEST_VERSION=$(jq -r '.version' server.json)
          MANIFEST_PACKAGE_VERSION=$(jq -r '.packages[0].version' server.json)
          test "$PACKAGE_VERSION" = "$MANIFEST_VERSION"
          test "$PACKAGE_VERSION" = "$MANIFEST_PACKAGE_VERSION"
      - name: Publish to npm (Trusted Publishing + provenance)
        env:
          # For Trusted Publishing with provenance, do NOT set NODE_AUTH_TOKEN.
          # Ensure the package is configured as a Trusted Publisher in npm for this repo.
          NPM_CONFIG_PROVENANCE: true
        run: |
          # Best practice: rebuild from source at the tagged commit; do not rely on GitHub release assets.
          npm publish --provenance --access public
      - name: Install MCP Publisher CLI
        run: |
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/v1.0.0/mcp-publisher_1.0.0_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" \
            | tar xz mcp-publisher
      - name: Login to MCP Registry (GitHub OIDC)
        run: ./mcp-publisher login github-oidc
      - name: Publish server manifest to MCP Registry
        run: ./mcp-publisher publish
